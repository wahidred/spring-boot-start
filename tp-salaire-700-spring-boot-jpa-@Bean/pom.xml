<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>springtp</groupId>
    <artifactId>tp-salaire-700-spring-boot-jpa-@Bean</artifactId>
    <version>0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <!-- same as the property name required for spring boot -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.0.0.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <!--<exclusions>-->
            <!--<exclusion>-->
            <!-- to escape the Tomcat Pool -->
            <!-- with this exclusion i would get org.apache.commons.dbcp.BasicDataSource@4ba89729 -->
            <!-- if commons-dbcp is in the classpath -->
            <!-- <groupId>org.apache.tomcat</groupId> -->
            <!-- <artifactId>tomcat-jdbc</artifactId> -->
            <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>
        <!-- if i prefer DBCP over Tomcat pool -->
        <!-- i should activate this jar and exclude Tomcat jar above -->
        <!-- since Tomcat pool is taken in preference to DBCP -->
        <!-- <dependency> -->
        <!-- <groupId>commons-dbcp</groupId> -->
        <!-- <artifactId>commons-dbcp</artifactId> -->
        <!-- </dependency> -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.3.6.Final</version>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.21</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
        </dependency>

        <!-- NECESSARY , bug Spring-Boot : -->
        <!-- javax.validation.ValidationException: -->
        <!-- HV000183: Unable to load 'javax.el.ExpressionFactory'. -->
        <!-- Check that you have the EL dependencies on the classpath -->
        <!-- javax.el javax.el-api 2.2.4 -->
        <!-- Alternatively, spring-boot-starter-web pulls in Tomcat's EL implementation. -->
        <!-- <dependency> -->
        <!-- <groupId>org.apache.tomcat</groupId> -->
        <!-- <artifactId>tomcat-el-api</artifactId> -->
        <!-- <version>8.0.18</version> -->
        <!-- </dependency> -->

        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>2.2.4</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.0</version>
        </dependency>

        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
        </dependency>

        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-reflect</artifactId>
            <version>1.4.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
